for (j in 1:10000) {
x=sqrt(i)/sqrt(j);
print(x)
}
}
?sample
rm(list = ls(all=TRUE))
setwd("/Users/vishnu/Documents/GitHub/Business-Analytics-Learning")
toyota.corola.df = read.csv("ToyotaCorolla.csv")
toyota.corola.df
View(toyota.corola.df)
fuel_type_cat <- model.matrix(~factor(toyota.corola.df$Fuel_Type))
color.cat <- model.matrix(~factor(toyota.corola.df$Color))
unique(toyota.corola.df$Fuel_Type)
cor(na.omit(toyota.corola.df[,-c(1,2,5,6,8,10:12,14:16,19:39)]))
cor(na.omit(toyota.corola.df[,-c(1,2,5,6,8,10:12,14:16,19:39)]))
fuel_type_cat
head(fuel_type_cat)
head(color.cat)
?setdiff
train <- sample(toyota.corolla.df$Id, 500)
test <- sample(setdiff(toyota.corolla.df$Id, train), 200)
validation <- sample(setdiff(toyota.corolla.df$Id, union(test,train)), 300)
toyota.corola.df = read.csv("ToyotaCorolla.csv")
fuel_type_cat <- model.matrix(~factor(toyota.corola.df$Fuel_Type))
color.cat <- model.matrix(~factor(toyota.corola.df$Color))
train <- sample(toyota.corolla.df$Id, 500)
test <- sample(setdiff(toyota.corolla.df$Id, train), 200)
validation <- sample(setdiff(toyota.corolla.df$Id, union(test,train)), 300)
toyota.corola.df
toyota.corolla.df <- read.csv("ToyotaCorolla.csv")
toyota.corolla.df <-
toyota.corolla.df[!is.na(toyota.corolla.df[validation,]$Price),]
training <- sample(toyota.corolla.df$Id, 600)
validation <- sample(setdiff(toyota.corolla.df$Id, training), 400)
train <- sample(toyota.corolla.df$Id, 500)
test <- sample(setdiff(toyota.corolla.df$Id, train), 200)
validation <- sample(setdiff(toyota.corolla.df$Id, union(test,train)), 300)
head(train)
head(test)
head(validation)
head(toyota.corola.df[train])
head(toyota.corola.df[train,])
head(toyota.corola.df[train,])
head(toyota.corola.df[test,])
head(toyota.corola.df[validation,])
dummy <- model.matrix(~0 + Fuel_Type + Color, data = toyota.corola.df)
dummy
head(fuel_type_cat)
fuel_type_cat <- model.matrix(~0 + toyota.corola.df$Fuel_Type, data =  toyota.corola.df)
head(fuel_type_cat)
color.cat <- model.matrix(~0 + toyota.corola.df$Color , data = toyota.corola.df)
head(color.cat)
head(as.data.frame(fuel_type_cat))
unique(toyota.corola.df$Fuel_Type)
unique(toyota.corola.df$Color)
fuel_type_cat <- fuel_type_cat[,-3]
color.cat <- color.cat[,-10]
head(fuel_type_cat)
head(color.cat)
head(toyota.corola.df)
view(toyota.corola.df)
summary(toyota.corola.df)
unique(toyota.corola.df$Gears)
summary(toyota.corola.df)
unique(toyota.corola.df$Fuel_Type)
head(color.cat)
head(fuel_type_cat)
head(color.cat)
head(color.cat)
cor(na.omit(toyota.corola.df[,-c(1,2,5,6,8,10:12,14:16,19:39)]))
cor(na.omit(toyota.corola.df[,-c(1,2,5,6,8,10:12,14:16,19:39)]))
library(caret)
install.packages("caret")
confusionMatrix(factor(ifelse(df$Propensity>0.25, 1, 0)),
factor(df$Actual), positive = "1")
Propensity <- c(0.03, 0.52, 0.38, 0.82, 0.33, 0.42, 0.55, 0.59, 0.09, 0.21,
0.43, 0.04, 0.08, 0.13, 0.01, 0.79, 0.42, 0.29, 0.08, 0.02)
Actual <- c(0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0)
df <- cbind(Propensity, Actual)
df <- as.data.frame(df)
summary(df)
confusionMatrix(factor(ifelse(df$Propensity>0.25, 1, 0)),
factor(df$Actual), positive = "1")
library(gains)
gain <- gains(df$Actual, df$Propensity, groups = 10)
barplot(gain$mean.resp/mean(df$Actual),
names.arg = gain$depth,
xlab = "Depth of File",
ylab = "Mean Response",
main = "Decile-wise lift chart")
confusionMatrix(factor(ifelse(df$Propensity>0.25, 1, 0)),
factor(df$Actual), positive = "1")
confusionMatrix(factor(ifelse(df$Propensity>0.5, 1, 0)),
factor(df$Actual), positive = "1")
confusionMatrix(factor(ifelse(df$Propensity>0.75, 1, 0)),
factor(df$Actual), positive = "1")
?gains
gain
library(forecast)
install.packages("forecast")
library(forecast)
population <- c(2,6,8,8,12,16,20,20,22,26)
sales <- c(58,105,88,118,117,137,157,169,149,202)
pizza <- as.data.frame(cbind(population,sales))
var(pizza)
cor(pizza)
pizza_regr <- lm(sales ~ population, data=pizza)
summary(pizza_regr)
plot(pizza)
abline(pizza_regr)
pizza_std <- data.frame(scale(pizza))
var(pizza_std)
cor(pizza_std)
# non-linear regression ----
x <- rnorm(200)
e <- rnorm(200)
y <- x^2 + e
plot(x,y)
cor(x,y)
cor(x*x,y)
x_quad <- x*x
reg <- lm(y ~ x_quad)
summary(reg)
points(x,reg$fitted.values, pch = 20)
# non-linear regression ----
x <- rnorm(200)
e <- rnorm(200)
y <- x^2 + e
plot(x,y)
cor(x,y)
cor(x*x,y)
x_quad <- x*x
reg <- lm(y ~ x_quad)
summary(reg)
points(x,reg$fitted.values, pch = 20)
y <- x^3 + e
x_cubic <- x*x*x
plot(x,y)
reg <- lm(y ~ x_cubic)
summary(reg)
points(x,reg$fitted.values, pch = 20)
housing <-- read.csv("BostonHousing.csv")
housing
reg <- lm(MEDV ~ CRIM + CHAS + RM , Data  = housing)
summary(reg)
reg <- lm(MEDV ~ CRIM + CHAS + RM , Data  = housing)
summary(reg)
housing$MEDV
reg <- lm(MEDV ~ CRIM + CHAS + RM , Data  = housing)
reg <- lm(housing$MEDV ~ CRIM + CHAS + RM , Data  = housing)
reg <- lm(housing$MEDV ~ housing$CRIM + housing$CHAS + housing$RM , Data  = housing)
summary(reg)
cor(housing)
heatmap(cor(housing))
amtrak.data <- read.csv("Amtrak.csv")
amtrak.data
install.packages("ts")
library(ts)
install.packages("ts")
library(ts)
?ts
install.packages("stats")
library(ts)
library(stats)
ridership <- ts(amtrak.data$Ridership, start = (1991,1), end = (2003,3), freq = 12)
ridership <- ts(amtrak.data$Ridership, start = c(1991,1), end = c(2003,3), freq = 12)
ridership
plot(ridership)
library(forecast)
ridership.3yrs <- window(ridership, start = c(1997,1), end = c(1999,12))
?tslm
ridership.lm <- tslm(ridership ~ trend)
plot(ridership.lm)
plot(ridership.lm, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
ridership.lm
plot(ridership.lm$fitted.values, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
plot(ridership.lm$coefficients, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
plot(ridership.lm$xlevels, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm$fitted.values)
ridership.lm1 <- tslm(ridership ~ trend, lambda = 0)
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm1$fitted.values)
ridership.lm1 <- tslm(ridership ~ trend, lambda = 0)
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm1$fitted.values)
lines(ridership.lm1$fitted.values, col = "blue")
lines(ridership.lm$fitted.values)
ridership.lm2 <- tslm(ridership ~ trend, lambda = 1)
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm2$fitted.values, col = "green")
lines(ridership.lm1$fitted.values, col = "blue")
lines(ridership.lm$fitted.values)
# Polynomial
ridership.lm2 <- tslm(ridership ~ trend+ I(trend^2))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm2$fitted.values, col = "green")
lines(ridership.lm2$fitted.values, col = "red")
lines(ridership.lm1$fitted.values, col = "blue")
lines(ridership.lm$fitted.values)
plot(ridership.lm2$residuals)
ridership.lm3 <- tslm(ridership ~ trend+ I(trend^3))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm3$fitted.values, col = "red")
ridership.lm2 <- tslm(ridership ~ trend+ I(trend^2))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm2$fitted.values, col = "red")
plot(ridership.lm3$residuals)
ridership.lm3 <- tslm(ridership ~ trend+ I(trend^4))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm3$fitted.values, col = "red")
plot(ridership.lm3$residuals)
ridership.lm3 <- tslm(ridership ~ trend+ I(trend^4))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm3$fitted.values, col = "red")
plot(ridership.lm3$residuals)
ridership.lm3 <- tslm(ridership ~ trend+ I(trend^3))
plot(ridership, xlab = "Time", ylab = "Ridership", ylim = c(1300,2300), bty = "l")
lines(ridership.lm3$fitted.values, col = "red")
plot(ridership.lm3$residuals)
deptstore_data <- read.csv("DepartmentStoreSales.csv")
deptstore_data <- read.csv("DepartmentStoreSales.csv")
ts( data = deptstore_data, start = c(2000,1), end = c(2004,4), frequency = 4)
dept_ts <- ts( data = deptstore_data, start = c(2000,1), end = c(2004,4), frequency = 4)
plot(dept_ts)
plot(dept_ts$Sales)
plot(dept_ts, ylab = "Sales USD", xlab = "Quarters", main = "Plot for sales per Q")
plot(dept_ts, ylab = "Sales USD", xlab = "Quarters", main = "Plot for sales per Q")
library(leaps)
library(gains)
library(forecast)
library(corrgram)
install.packages("corrgram")
library(corrgram)
tayko.df <- read.csv("Tayko.csv")
tayko.df <- read.csv("Tayko.csv")
tayko.df <- tayko.df [ , c(2,18,19,21:23,25)]
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), mean)
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), sd)
aggregate(tayko.df$Spending, list(tayko.df$Web.order), mean)
aggregate(tayko.df$Spending, list(tayko.df$Web.order), sd)
aggregate(tayko.df$Spending, list(tayko.df$Address_is_res), mean)
aggregate(tayko.df$Spending, list(tayko.df$Address_is_res), sd)
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
attach(mtcars)
par(mfrow=c(2,2))
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
attach(mtcars)
par(mfrow=c(1,2))
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
attach(mtcars)
par(mfrow=c(2,1))
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
attach(mtcars)
par(mfrow=c(1,2))
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
set.seed(1)
train.index <- sample(c(1:dim(tayko.df)[1]), 0.6*dim(tayko.df)[1])
valid.index <- setdiff(c(1:dim(tayko.df)[1]), train.index)
train.df <- tayko.df[train.index,]
valid.df <- tayko.df[valid.index,]
reg <- lm(Spending ~ Gender.male + Web.order + Address_is_res + US + Freq + last_update_days_ago, data = train.df)
summary(reg)
step(reg, direction = "backward")
first.obs <- head(valid.df,1)
dim(first.obs)
library(forecast)
toyota.corolla <- read.csv("ToyotaCorolla.csv")
toyota.reg <- lm(toyota.corolla$Price ~ .)
toyota.reg <- lm(toyota.corolla$Price ~ toyota.corolla$Age_08_04 + toyota.corolla$HP + toyota.corolla$Fuel_Type + toyota.corolla$KM + toyota.corolla$Automatic + toyota.corolla$Doors
toyota.corolla$Quarterly_Tax + toyota.corolla$Mfg_Year + toyota.corolla$Guarantee_Period + toyota.corolla$Airco + toyota.corolla$Automatic_airco+ toyota.corolla$CD_Player
toyota.corolla$Model + toyota.corolla$Tow_Bar)
toyota.reg <- lm(toyota.corolla$Price ~ toyota.corolla$Age_08_04 + toyota.corolla$HP + toyota.corolla$Fuel_Type + toyota.corolla$KM + toyota.corolla$Automatic + toyota.corolla$Doors +
toyota.corolla$Quarterly_Tax + toyota.corolla$Mfg_Year + toyota.corolla$Guarantee_Period + toyota.corolla$Airco + toyota.corolla$Automatic_airco+ toyota.corolla$CD_Player +
toyota.corolla$Model + toyota.corolla$Tow_Bar)
summary(toyota.reg)
toyota.corolla <- read.csv("ToyotaCorolla.csv")
train.index <- sample(c(1:dim(toyota.corolla)[1]),
0.5*dim(toyota.corolla)[1])
remaining.index <- setdiff(c(1:dim(car.df)[1]), train.index)
valid.index <- sample(remaining.index,
0.3*dim(toyota.corolla)[1])
test.index <- setdiff(remaining.index, valid.index)
train.df <- car.df[train.index, ]
valid.df <- car.df[valid.index, ]
test.df <- car.df[test.index, ]
train.index <- sample(c(1:dim(toyota.corolla)[1]),
0.5*dim(toyota.corolla)[1])
remaining.index <- setdiff(c(1:dim(toyota.corolla)[1]), train.index)
valid.index <- sample(remaining.index,
0.3*dim(toyota.corolla)[1])
test.index <- setdiff(remaining.index, valid.index)
train.df <- toyota.corolla[train.index, ]
valid.df <- toyota.corolla[valid.index, ]
test.df <- toyota.corolla[test.index, ]
toyota.reg <- lm(train.df$Price ~ *, data = train.df)
toyota.reg <- lm(train.df$Price ~ ., data = train.df)
summary(toyota.reg)
toyota.reg
toyota.reg$coefficients
summary(toyota.reg)
library(forecast)
sales.df <- read.csv("ShampooSales.csv")
sales.df <- read.csv("ShampooSales.csv")
sales.ts <- ts(sales.df$Shampoo.Sales,
start = c(1995, 1), end = c(1997, 12), freq = 12)
plot(sales.ts, xlab = "Quarter", ylab = "Sales",
main = "Time plot of monthly sales of a certain shampoo\n over a 3 year period")
sales.ts
plot(sales.ts, xlab = "Years", ylab = "Sales",
main = "Time plot of monthly sales of a certain shampoo\n over a 3 year period")
plot(sales.ts, xlab = "years", ylab = "Sales",
main = "Time plot of monthly sales of a certain shampoo\n over a 3 year period")
plot(1:10)
dev.new(width=5, height=4)
plot(1:20)
plot(sales.ts, xlab = "years", ylab = "Sales",
main = "Time plot of monthly sales of a certain shampoo\n over a 3 year period")
dev.new(width=5, height=4)
plot(sales.ts, xlab = "years", ylab = "Sales",
main = "Time plot of monthly sales of a certain shampoo\n over a 3 year period")
#required libraries
library(leaps) #for subset selection
library(gains) #for gains and lift chart
library(forecast) #for accuracy measures
library(corrgram) #for producing a graphical display of a correlation matrix
#load the data
tayko.df <- read.csv("Tayko.csv")
head(tayko.df)
#load the data
car.df <- read.csv("ToyotaCorolla.csv")
dim(car.df)
#partition the data into training (50%), validation (30%), and test (20%)
#sets
train.index <- sample(c(1:dim(car.df)[1]),
0.5*dim(car.df)[1])
remaining.index <- setdiff(c(1:dim(car.df)[1]), train.index)
valid.index <- sample(remaining.index,
0.3*dim(car.df)[1])
test.index <- setdiff(remaining.index, valid.index)
train.df <- car.df[train.index, ]
valid.df <- car.df[valid.index, ]
test.df <- car.df[test.index, ]
#multiple linear regression on training data
reg <- lm(Price ~ Age_08_04 + KM + factor(Fuel_Type) + HP + Automatic + Doors
+ Quarterly_Tax + Mfr_Guarantee + Guarantee_Period + Airco
+ Automatic_airco + CD_Player + Powered_Windows + Sport_Model
+ Tow_Bar,
data = train.df)
summary(reg)
housing <-- read.csv("BostonHousing.csv")
housing$MEDV
reg <- lm(housing$MEDV ~ housing$CRIM + housing$CHAS + housing$RM , Data  = housing)
summary(reg)
heatmap(cor(housing))
housing
heatmap(cor(housing))
step(reg, direction = "backward")
step(reg, direction = "forward")
step(reg, direction = "both")
#required libraries
library(leaps) #for subset selection
library(gains) #for gains and lift chart
library(forecast) #for accuracy measures
library(corrgram) #for producing a graphical display of a correlation matrix
#load the data
tayko.df <- read.csv("Tayko.csv")
head(tayko.df)
t(t(names(tayko.df)))
summary(tayko.df)
#keep only the requested variables
tayko.df <- tayko.df[, c(2, 18, 19, 21:23, 25)]
t(t(names(tayko.df)))
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), mean)
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), sd)
#required libraries
library(leaps) #for subset selection
library(gains) #for gains and lift chart
library(forecast) #for accuracy measures
library(corrgram) #for producing a graphical display of a correlation matrix
#load the data
tayko.df <- read.csv("Tayko.csv")
head(tayko.df)
t(t(names(tayko.df)))
summary(tayko.df)
#keep only the requested variables
tayko.df <- tayko.df[, c(2, 18, 19, 21:23, 25)]
t(t(names(tayko.df)))
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), mean)
aggregate(tayko.df$Spending, list(tayko.df$Gender.male), sd)
aggregate(tayko.df$Spending, list(tayko.df$Web.order), mean)
aggregate(tayko.df$Spending, list(tayko.df$Web.order), sd)
aggregate(tayko.df$Spending, list(tayko.df$Address_is_res), mean)
aggregate(tayko.df$Spending, list(tayko.df$Address_is_res), sd)
#scatter plots
plot(tayko.df$Freq ~ tayko.df$Spending)
plot(tayko.df$last_update_days_ago ~ tayko.df$Spending)
#splitting the data
set.seed(1)
train.index <- sample(c(1:dim(tayko.df)[1]),
0.6*dim(tayko.df)[1])
valid.index <- setdiff(c(1:dim(tayko.df)[1]), train.index)
train.df <- tayko.df[train.index, ]
valid.df <- tayko.df[valid.index, ]
reg <- lm(Spending ~ Gender.male +
Web.order +
Address_is_res +
US +
Freq +
last_update_days_ago, data = train.df)
summary(reg)
summary(reg)
#stepwise backward regression
step(reg, direction = "backward")
#first observation in the validation set
first.obs <- head(valid.df,1)
dim(first.obs)
library(forecast)
#manual calculation of prediction error
#The prediction for this record is computed using the fitted model:
Spending <- -5.87 + (-11.624718) * 1 + (89.089779) * 2 + (-0.009212) * 3662 +
(14.140303) * 1 + (-3.189701) * 0 + (-71.654020) * 1
Spending
Prediction.error <- first.obs[1,7] - Spending
Prediction.error
pred <- predict(reg, valid.df)
#accuracy
#train set
pred.train <- predict(reg, train.df)
accuracy(pred.train, train.df$Spending)
hist(reg$residuals)
par(mar=c(1,1,1,1))
hist(reg$residuals)
#load the data
car.df <- read.csv("ToyotaCorolla.csv")
dim(car.df)
#partition the data into training (50%), validation (30%), and test (20%)
#sets
train.index <- sample(c(1:dim(car.df)[1]),
0.5*dim(car.df)[1])
remaining.index <- setdiff(c(1:dim(car.df)[1]), train.index)
valid.index <- sample(remaining.index,
0.3*dim(car.df)[1])
test.index <- setdiff(remaining.index, valid.index)
train.df <- car.df[train.index, ]
valid.df <- car.df[valid.index, ]
test.df <- car.df[test.index, ]
#multiple linear regression on training data
reg <- lm(Price ~ Age_08_04 + KM + factor(Fuel_Type) + HP + Automatic + Doors
+ Quarterly_Tax + Mfr_Guarantee + Guarantee_Period + Airco
+ Automatic_airco + CD_Player + Powered_Windows + Sport_Model
+ Tow_Bar,
data = train.df)
summary(reg)
#prediction accuracy on validation data
pred <- predict(reg, valid.df)
accuracy(pred, valid.df$Price)
#prediction accuracy on test data
pred <- predict(reg, test.df)
accuracy(pred, test.df$Price)
deptstore_data <- read.csv("DepartmentStoreSales.csv")
deptstore_data <- read.csv("DepartmentStoreSales.csv")
dept_ts <- ts( data = deptstore_data, start = c(2000,1), end = c(2004,4), frequency = 4)
plot(dept_ts)
plot(dept_ts, ylab = "Sales USD", xlab = "Quarters", main = "Plot for sales per Q")
appl <- read.csv("ApplianceShipments.csv")
appl
appl_ts <- ts(data = appl, start=c(1985,1), end = c(1989,4),frequency = 4 )
appl_ts
plot(appl_ts)
canw <- read.csv("CanadianWorkHours.csv")
canw
canw_ts <- ts(data = canw, start=c(1966,1), end = c(2000,1),frequency = 12 )
plot(appl_ts)
plot(canw_ts)
canw_ts
canw_ts <- ts(data = canw, start=c(1966,1), end = c(2000,1),frequency = 1 )
canw_ts
plot(canw_ts)
sov <- read.csv("SouvenirSales.csv")
sov
canw_ts <- ts(data = canw, start=c(1995,1), end = c(2001,12),frequency = 1 )
canw_ts
sov_ts <- ts(data = canw, start=c(1995,1), end = c(2001,12),frequency = 1 )
sov_ts
plot(sov_ts)
sov
sov$Sales <- ln(sov$Sales)
sov$Sales <- log(sov$Sales)
sov_ts <- ts(data = canw, start=c(1995,1), end = c(2001,12),frequency = 1 )
sov_ts
plot(sov_ts)
sov_ts <- ts(data = sov, start=c(1995,1), end = c(2001,12),frequency = 1 )
sov_ts
plot(sov_ts)
sov <- read.csv("SouvenirSales.csv")
sov
sov_ts <- ts(data = sov, start=c(1995,1), end = c(2001,12),frequency = 1 )
sov_ts
plot(sov_ts)
sov$Sales <- log(sov$Sales)
sov_ts <- ts(data = sov, start=c(1995,1), end = c(2001,12),frequency = 1 )
sov_ts
plot(sov_ts)
